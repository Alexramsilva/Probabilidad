# -*- coding: utf-8 -*-
"""Probabilidad.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ECzqjo8H3d9MOLlz4W70N_8Xlp_ktc-7
"""

import streamlit as st
import scipy.stats as stats

st.image("UNRC.png", caption="Universidad Nacional Rosario Castellanos", width=550)

# Configuración de la app
st.set_page_config(page_title="Calculadora de Probabilidades (UCA Probabilidad)", page_icon="UNRC", layout="centered")

st.title("Calculadora de Distribuciones de Probabilidad")
st.markdown("Selecciona una distribución y calcula probabilidades o valores críticos.")

# Selección de distribución
dist = st.selectbox(
    "Selecciona la distribución:",
    [
        "Bernoulli",
        "Binomial",
        "Poisson",
        "Normal",
        "t-Student",
        "Chi-cuadrada",
        "F de Fisher"
    ]
)

st.divider()

# Funciones para cada distribución
if dist == "Bernoulli":
    p = st.number_input("Probabilidad de éxito (p)", min_value=0.0, max_value=1.0, value=0.5)
    x = st.selectbox("Valor de X", [0, 1])
    prob = stats.bernoulli.pmf(x, p)
    st.write(f"**P(X={x}) = {prob:.4f}**")

elif dist == "Binomial":
    n = st.number_input("Número de ensayos (n)", min_value=1, value=10)
    p = st.number_input("Probabilidad de éxito (p)", min_value=0.0, max_value=1.0, value=0.5)
    x = st.number_input("Número de éxitos (x)", min_value=0, max_value=int(n), value=5)
    tipo = st.radio("Tipo de cálculo", ["P(X = x)", "P(X ≤ x)", "P(X ≥ x)"])

    if tipo == "P(X = x)":
        prob = stats.binom.pmf(x, n, p)
    elif tipo == "P(X ≤ x)":
        prob = stats.binom.cdf(x, n, p)
    else:
        prob = 1 - stats.binom.cdf(x-1, n, p)
    st.write(f"**{tipo} = {prob:.4f}**")

elif dist == "Poisson":
    mu = st.number_input("Media (λ)", min_value=0.0, value=2.0)
    x = st.number_input("Número de eventos (x)", min_value=0, value=3)
    tipo = st.radio("Tipo de cálculo", ["P(X = x)", "P(X ≤ x)", "P(X ≥ x)"])

    if tipo == "P(X = x)":
        prob = stats.poisson.pmf(x, mu)
    elif tipo == "P(X ≤ x)":
        prob = stats.poisson.cdf(x, mu)
    else:
        prob = 1 - stats.poisson.cdf(x-1, mu)
    st.write(f"**{tipo} = {prob:.4f}**")

elif dist == "Normal":
    mu = st.number_input("Media (μ)", value=0.0)
    sigma = st.number_input("Desviación estándar (σ)", min_value=0.0001, value=1.0)
    x = st.number_input("Valor de X", value=0.0)
    tipo = st.radio("Tipo de cálculo", ["P(X ≤ x)", "P(X ≥ x)"])

    if tipo == "P(X ≤ x)":
        prob = stats.norm.cdf(x, mu, sigma)
    else:
        prob = 1 - stats.norm.cdf(x, mu, sigma)
    st.write(f"**{tipo} = {prob:.4f}**")

elif dist == "t-Student":
    gl = st.number_input("Grados de libertad (ν)", min_value=1, value=10)
    t = st.number_input("Valor t", value=1.5)
    tipo = st.radio("Tipo de cálculo", ["P(T ≤ t)", "P(T ≥ t)"])

    if tipo == "P(T ≤ t)":
        prob = stats.t.cdf(t, gl)
    else:
        prob = 1 - stats.t.cdf(t, gl)
    st.write(f"**{tipo} = {prob:.4f}**")

elif dist == "Chi-cuadrada":
    gl = st.number_input("Grados de libertad (ν)", min_value=1, value=5)
    x = st.number_input("Valor de X²", value=3.0)
    tipo = st.radio("Tipo de cálculo", ["P(X² ≤ x)", "P(X² ≥ x)"])

    if tipo == "P(X² ≤ x)":
        prob = stats.chi2.cdf(x, gl)
    else:
        prob = 1 - stats.chi2.cdf(x, gl)
    st.write(f"**{tipo} = {prob:.4f}**")

elif dist == "F de Fisher":
    gl1 = st.number_input("Grados de libertad del numerador (d1)", min_value=1, value=5)
    gl2 = st.number_input("Grados de libertad del denominador (d2)", min_value=1, value=10)
    f = st.number_input("Valor F", value=2.0)
    tipo = st.radio("Tipo de cálculo", ["P(F ≤ f)", "P(F ≥ f)"])

    if tipo == "P(F ≤ f)":
        prob = stats.f.cdf(f, gl1, gl2)
    else:
        prob = 1 - stats.f.cdf(f, gl1, gl2)
    st.write(f"**{tipo} = {prob:.4f}**")

st.divider()
st.caption("Calculadora de distribuciones estadísticas  UNRC_LCFI (UCA Probabilidad)")